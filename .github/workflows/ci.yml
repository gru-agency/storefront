name: ci

on:
  # push:
  #   branches:
  #     - main
  # pull_request:
  #   branches:
  #     - main

jobs:
  ci:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@v2

      # - name: Setup node env 🏗
      #   uses: actions/setup-node@v2.1.5
      #   with:
      #     node-version: ${{ matrix.node }}
      #     check-latest: true

      - name: Get yarn cache directory path 🛠
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Cache node_modules 📦
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies 👨🏻‍💻
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --json --immutable --inline-builds

      - name: Generate static files 👀
        run: yarn generate

      # - name: Run linter 👀
      #   run: yarn lint

      # - name: Run tests 🧪
      #   run: yarn test
